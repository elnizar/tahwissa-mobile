package tn.esprit.tahwissa;

import com.codename1.components.InfiniteProgress;
import com.codename1.components.SpanLabel;
import com.codename1.components.ToastBar;
import com.codename1.notifications.LocalNotification;
import com.codename1.ui.Button;
import com.codename1.ui.Container;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Display;
import com.codename1.ui.EncodedImage;
import com.codename1.ui.Image;
import com.codename1.ui.Label;
import com.codename1.ui.Slider;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.ui.Toolbar;
import com.codename1.ui.URLImage;
import com.codename1.ui.layouts.BorderLayout;
import com.codename1.ui.layouts.BoxLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;
import util.MenuManager;
import util.TwitterLogin;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename
 * One</a> for the purpose of building native mobile applications using Java.
 */
public class TwitterPosts implements Observer {

    Slider slider;
    private Form current;
    private Resources theme;
    private Button clickedFile;
    private List<String> selectedFiles = new ArrayList<>();
    private Image unselectedImage;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        // Log.bindCrashProtection(true);
    }

    int currentUpload = 1;
    int lastProgress = -1;
    Label l;
    Dialog d;
    ToastBar.Status status;
    Form f;
    List<Map<String, Object>> data = new ArrayList<>();
    Dialog dlg;

    public void start() {
        LocalNotification n = new LocalNotification();
        n.setId("demo-notification");
        n.setAlertBody("It's time to take a break and look at me");
        n.setAlertTitle("Break Time!");
        //n.setAlertSound("beep-01a.mp3");

        Form hi = new Form("Twitter Feed", new BoxLayout(BoxLayout.Y_AXIS));
        f = hi;
        hi.show();
        hi.getToolbar().setUIID("myToolbar");
        InfiniteProgress ip = new InfiniteProgress();
        dlg = ip.showInifiniteBlocking();
        TwitterLogin.getPosts(this);
        hi.getContentPane().addPullToRefresh(() -> {
            refresh();
        });
        MenuManager.createMenu(f, theme);
        //   Display.getInstance().vibrate(100000);
        /*   Display.getInstance().scheduleLocalNotification(
                n,
                System.currentTimeMillis() + 1000, // fire date/time
                LocalNotification.REPEAT_MINUTE // Whether to repeat and what frequency
        );
         */
    }

    public void load() {
        for (int i = 0; i < data.size(); i++) {
            Container post = new Container(new BorderLayout());
            post.setUIID("post");
            Container userInfo = new Container(new BorderLayout());

            Map<String, Object> element = data.get(i);
            SpanLabel l = new SpanLabel((String) element.get("text"));
            String pic = (String) element.get("picture");
            EncodedImage placeholder = EncodedImage.createFromImage(Image.createImage(Display.getInstance().getDisplayWidth() / 4, Display.getInstance().getDisplayWidth() / 4), false);
            Image img = URLImage.createToStorage(placeholder, pic, pic);

            Container dateAndName = new Container(BoxLayout.y());
            String dateVal = (String) element.get("created_at");
            dateVal = dateVal.substring(0, dateVal.indexOf("+") - 1);
            Label date = new Label(dateVal);
            date.setUIID("twitterDate");
            Label twitterIcon = new Label();
            twitterIcon.setIcon(theme.getImage("twitter.png"));
            date.setGap(10);
            dateAndName.add(date);

            Label name = new Label("@" + (String) element.get("screen_name"));
            name.setUIID("twitterName");
            dateAndName.add(name);
            name.setGap(10);
            Container dateAndNameAndIcon = new Container(new BorderLayout());
            dateAndNameAndIcon.add(BorderLayout.WEST, twitterIcon);
            dateAndNameAndIcon.add(BorderLayout.CENTER, dateAndName);
            
            l.add(BorderLayout.WEST, img);
            l.setTextUIID("twitterText");
            post.add(BorderLayout.NORTH, dateAndNameAndIcon);
            post.add(BorderLayout.CENTER, l);

            f.add(post);
        }
        f.refreshTheme();

    }

    public void refresh() {
        InfiniteProgress ip = new InfiniteProgress();
        dlg = ip.showInifiniteBlocking();
        TwitterLogin.getPosts(this);
    }

    @Override
    public void update(Observable o, Object arg) {
        dlg.dispose();
        data = (List<Map<String, Object>>) arg;
        load();
    }

    int pageNumber = 1;

}
